version: '3.8'
services:
  backend:
    build: ./backend
    ports:
      - "8000:8000"
    env_file:
      - .env
    depends_on:
      - postgres
      - redis
      - mosquitto
    networks:
      - fest_network
    restart: unless-stopped

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - /etc/letsencrypt:/etc/letsencrypt:ro
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - backend
    networks:
      - fest_network
    restart: unless-stopped

  postgres:
    image: postgis/postgis:17-3.5
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./db-init:/docker-entrypoint-initdb.d
    networks:
      - fest_network
    restart: unless-stopped

  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - fest_network
    restart: unless-stopped
    command: redis-server --appendonly yes

  mosquitto:
    image: eclipse-mosquitto
    ports:
      - "127.0.0.1:1883:1883"  # 로컬 인터페이스에만 바인딩
      - "127.0.0.1:9001:9001"  # WebSocket 포트도 로컬에만 제한
    volumes:
      - mosquitto_data:/mosquitto/data
      - mosquitto_log:/mosquitto/log
      - ./mosquitto.conf:/mosquitto/config/mosquitto.conf
    networks:
      - fest_network
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
  mosquitto_data:
  mosquitto_log:

networks:
  fest_network:
    driver: bridge